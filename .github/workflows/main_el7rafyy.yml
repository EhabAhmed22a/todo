# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - el7rafyy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Publish with detailed logging
        run: dotnet publish -c Release -o ./publish --verbosity detailed

      # CRITICAL DEBUG STEPS
      - name: Analyze publish output
        run: |
          echo "=== PUBLISH OUTPUT ANALYSIS ==="
          echo "Total files:"
          find ./publish -type f | wc -l
          echo "Total size:"
          du -sh ./publish
          echo "Top 10 largest files:"
          find ./publish -type f -exec du -h {} + | sort -rh | head -10
          echo "DLL files:"
          find ./publish -name "*.dll" | head -10
          echo "EXE files:"
          find ./publish -name "*.exe" | head -10
          echo "Config files:"
          find ./publish -name "*.json" -o -name "*.config" | head -10

      - name: Check for essential files
        run: |
          echo "=== ESSENTIAL FILES CHECK ==="
          [ -f "./publish/*.dll" ] && echo "✓ DLL found" || echo "✗ No DLL found"
          [ -f "./publish/*.runtimeconfig.json" ] && echo "✓ Runtime config found" || echo "✗ No runtime config"
          [ -f "./publish/appsettings.json" ] && echo "✓ appsettings.json found" || echo "✗ No appsettings.json"
          [ -f "./publish/web.config" ] && echo "✓ web.config found" || echo "✗ No web.config"

      - name: Create deployment package
        run: |
          echo "Creating zip from publish folder..."
          cd ./publish
          zip -r ../deployment.zip .
          echo "Zip created:"
          ls -la ../deployment.zip
          echo "Zip contents:"
          unzip -l ../deployment.zip | head -20

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-app
          path: deployment.zip

  deploy:
    runs-on: windows-latest
    needs: build
    environment: production

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-app
          path: ./deploy-package

      - name: Verify downloaded package
        run: |
          echo "Downloaded package:"
          ls -la ./deploy-package/
          echo "Zip contents:"
          unzip -l ./deploy-package/deployment.zip | head -10

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'el7rafyy'
          package: ./deploy-package/deployment.zip

          



